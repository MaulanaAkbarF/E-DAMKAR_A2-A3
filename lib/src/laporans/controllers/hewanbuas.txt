 final TextEditingController namaBencanaCon = TextEditingController();
  final TextEditingController noTelpCon = TextEditingController();
  final TextEditingController deskripsiCon = TextEditingController();
  final _formKey = GlobalKey<FormState>();
  var iduser;
  @override
  void initState() {
    super.initState();
    DataUser().getNoHp().then((value) => noTelpCon.text = value);
    DataUser().getUserId().then((value) => iduser = value);
  }

  void _kirimNotifikasi() async {
    // Ganti dengan URL endpoint API yang sesuai

    // Data yang akan dikirim
    var data = {
      "desa": widget.desa,
      "jalan": widget.jalan,
      "kecamatan": widget.kecamatan,
      "kota": widget.kota,
      "kodepos": widget.kodepos,
      "latitude": widget.latitude.toString(),
      "longitude": widget.longitude.toString(),
      "namaBencana": namaBencanaCon.text,
      "noTelp": noTelpCon.text.toString(),
    };

    // Mengirim data ke server menggunakan metode POST
    var response = await APIClient().postData("sendToWa", data);
    // Menerima dan memproses respons dari server
    if (response != null) {
      print(jsonDecode(response));
    } else {
      print('Gagal mengirim data. Kode status: ${response.statusCode}');
    }
  }

  void pushLaporan() async {
    _kirimNotifikasi();
    setState(() {
      showSpinner = true;
    });
    String title = iduser.toString() + "_image_" + getRandomString(30);
    DateTime now = new DateTime.now();
    DateTime date = new DateTime(now.year, now.month, now.day);
    String alamat = widget.jalan +
        ', ' +
        widget.desa +
        ', ' +
        widget.kecamatan +
        ', ' +
        widget.kota +
        ', ' +
        widget.kodepos;

    var result =
        await APIClient().postMulti('addImage', image, imagePath, title);

    var result2 = await APIClient().postData('addPelaporan', {
      'user_listdata_id': iduser.toString(),
      'kategori_laporan_id': '4',
      'tgl_lap': date.toString().replaceAll("00:00:00.000", ""),
      'deskripsi_laporan': deskripsiCon.text,
      'gambar_bukti_pelaporan': title,
      'alamat_kejadian': alamat,
      'latitude': widget.latitude.toString(),
      'longitude': widget.longitude.toString(),
      'urgensi': namaBencanaCon.text
    });

    _kirimNotifikasi();
    if (result2 != null) {
      FloatNotif().snackBar(context, "Laporan Berhasil dikirim!",
          "Laporan Anda akan segera kami tangani, lihat status untuk melihat kemajuan!");
      // Navigator.of(context).pushReplacement(MaterialPageRoute(
      //     builder: (BuildContext context) => const AppMenu()));
    } else {
      FloatNotif().snackBarFail(context, "Laporan gagal dikirim!",
          "Lakukan Emergency Call jika terdapat kenadala");
    }
  }

  File? image;
  String? imageName;
  var imagePath;
  bool showSpinner = false;
  final ImagePicker _picker = ImagePicker();

  Future getImage() async {
    final imagePicked = await _picker.pickImage(source: ImageSource.gallery);

    if (imagePicked != null) {
      image = File(imagePicked.path);
      imageName = imagePicked.name;
      imagePath = imagePicked.path;
      setState(() {});
    } else {
      print('no image selected');
    }
  }
